apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: app-ingress
spec:
    rules:
        - http:
            paths:
                - path: /
                  pathType: Prefix
                  backend:
                      service:
                          name: web
                          port:
                              number: 80
#                - path: /api
#                  pathType: Prefix
#                  backend:
#                      service:
#                          name: api
#                          port:
#                              number: 80
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: web
  name: web
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: web
  type: NodePort
#---
#apiVersion: v1
#kind: Service
#metadata:
#    name: api
#spec:
#    type: NodePort
#    selector:
#        app: api
#    ports:
#        - name: http
#          protocol: TCP
#          port: 80
#          targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: web
  name: web
spec:
  replicas: 5
  selector:
    matchLabels:
      app: web
  strategy:
      type: RollingUpdate
      rollingUpdate:
          maxSurge: 50%
          maxUnavailable: 50%
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: web
    spec:
      containers:
      - image: golang-sample-app:1.0.0
        name: golang-sample-app
        ports:
            - containerPort: 80
        imagePullPolicy: IfNotPresent
        env:
            - name: PORT
              value: "80"
